{"version":3,"sources":["intro.js","html.js","main.js","i18n.js","en.js","ru.js","model.js"],"names":["$","htmlEncode","value","toString","replace","getOptions","userHtmlOptions","userCodeOptions","undefined","k","htmlOptions","heading","codeOptions",{"end":{"file":"?","comments_before":[],"nlb":false,"endpos":14973,"endcol":10,"endline":431,"pos":14969,"col":6,"line":431,"value":"data","type":"name"},"start":{"file":"?","comments_before":[],"nlb":false,"endpos":14973,"endcol":10,"endline":431,"pos":14969,"col":6,"line":431,"value":"data","type":"name"},"name":"data"},"data","dataname","i","this","filename","lastIndexOf","substring","o","forEach","prop","set","model","needSplit","splitRatio","needProb","threshold","y","formula","indexOf","rhs","toJSON","savedObject","userOptionNames","reset","postprocess","splitSeed","forestSeed","html","code","i18n","i18ns","get","lang","encode","generateCodeTable","options","modelClasses","BaselineModel","LogregModel","CartModel","ForestModel","models","map","modelClass","getNameId","join","generateCode","generateHtml","optionName","generateId","idCounter","defaultLang","split","id","s","sLang","match","p1","link","text","slice","hreflang","en","Binary classification","model.baseline","model.logreg","model.cart.prob","model.cart.class","model.forest","options.code.filename","options.code.postprocess","options.code.formula","options.code.splitSeed","options.code.splitRatio","options.code.splitRatio.title","options.code.threshold","options.code.threshold.title","options.code.forestSeed","Reset options","comment.data","comment.postprocess","comment.split","comment.data.model","comment.data.prob","comment.data.train.prob","comment.data.test.prob","comment.data.class","comment.data.train.class","comment.data.test.class","comment.data.acc","comment.data.train.acc","comment.data.test.acc","comment.data.auc","comment.data.train.auc","comment.data.test.auc","ru","Model","prototype","generateLines","concatModelLines","lines","concat","comment","generateProbModelLines","generateClassModelLines","concatPostModelLines","dataset","isNewdata","generateProbLines","generateClassFromProbLines","generateClassFromModelLines","generateAccLines","generateAucLines","e","listLibraries","lib","train","test","call","prob","acc","auc","libs","push","Object","create","constructor","each","applyCodeOptions","containerNode","find","replaceWith","storage","localStorage","JSON","stringify","nodeName","closest","attr","parse","div","label","labelTitle","newLabel","optionValue","inputTagOpen","inputTagClose","on","append","click"],"mappings":"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","file":"statistics-classification-binary.js","sourcesContent":["$(function(){\r\n","function htmlEncode(value) {\r\n\t// return $('<div/>').text(value).html(); // http://stackoverflow.com/a/1219983 - can't do it w/o jQuery\r\n\treturn value.toString()\r\n\t\t.replace(/&/g,'&amp;').replace(/\"/g,'&quot;').replace(/'/g,'&#39;')\r\n\t\t.replace(/</g,'&lt;').replace(/>/g,'&gt;')\r\n\t; // https://github.com/emn178/js-htmlencode/blob/master/src/htmlencode.js\r\n}\r\n\r\n// converts simple serializable option objects to one with functions\r\nfunction getOptions(userHtmlOptions,userCodeOptions) {\r\n\tif (userHtmlOptions===undefined) userHtmlOptions={};\r\n\tif (userCodeOptions===undefined) userCodeOptions={};\r\n\tvar k;\r\n\r\n\t// htmlOptions are set by html page authors\r\n\tvar htmlOptions={};\r\n\tfor (k in userHtmlOptions) {\r\n\t\thtmlOptions[k]=userHtmlOptions[k];\r\n\t}\r\n\tif (htmlOptions.heading==true) {\r\n\t\thtmlOptions.heading='h1';\r\n\t}\r\n\r\n\t// codeOptions are set by html page users\r\n\tvar codeOptions={\r\n\t\tget data(){\r\n\t\t\tvar i=this.filename.lastIndexOf('.');\r\n\t\t\tvar dataname;\r\n\t\t\tif (i>0) { // . exists and not 0th character\r\n\t\t\t\tdataname=this.filename.substring(0,i);\r\n\t\t\t} else {\r\n\t\t\t\tdataname=this.filename;\r\n\t\t\t}\r\n\t\t\tvar o={\r\n\t\t\t\ttoString:function(){\r\n\t\t\t\t\treturn dataname;\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\t['model','prob','class','acc','auc'].forEach(function(prop){\r\n\t\t\t\to[prop]=dataname+'.'+prop;\r\n\t\t\t});\r\n\t\t\t['train','test'].forEach(function(set){\r\n\t\t\t\to[set]={\r\n\t\t\t\t\ttoString:function(){\r\n\t\t\t\t\t\treturn dataname+'.'+set;\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t\to[set].model=dataname+'.model'; // one model for both train/test sets\r\n\t\t\t\t['prob','class','acc','auc'].forEach(function(prop){ // different data for train/test sets\r\n\t\t\t\t\to[set][prop]=dataname+'.'+set+'.'+prop;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn o;\r\n\t\t},\r\n\t\tget needSplit(){\r\n\t\t\treturn this.splitRatio>0.0 && this.splitRatio<1.0;\r\n\t\t},\r\n\t\tget needProb(){\r\n\t\t\treturn this.threshold>0.0 && this.threshold<1.0;\r\n\t\t},\r\n\t\tget y(){\r\n\t\t\tvar i=this.formula.indexOf('~');\r\n\t\t\tif (i>=0) {\r\n\t\t\t\treturn this.formula.substring(0,i);\r\n\t\t\t} else {\r\n\t\t\t\t// TODO invalid formula, got to warn\r\n\t\t\t\treturn this.formula;\r\n\t\t\t}\r\n\t\t},\r\n\t\tget rhs(){\r\n\t\t\tvar i=this.formula.indexOf('~');\r\n\t\t\tif (i>=0) {\r\n\t\t\t\treturn this.formula.substring(i+1);\r\n\t\t\t} else {\r\n\t\t\t\t// TODO invalid formula, got to warn\r\n\t\t\t\treturn this.formula;\r\n\t\t\t}\r\n\t\t},\r\n\t\ttoJSON:function(){\r\n\t\t\tvar savedObject={};\r\n\t\t\tthis.userOptionNames.forEach(function(k){\r\n\t\t\t\tsavedObject[k]=this[k];\r\n\t\t\t},this);\r\n\t\t\treturn savedObject;\r\n\t\t},\r\n\t\treset:function(){\r\n\t\t\tthis.filename='data.csv';\r\n\t\t\tthis.postprocess='';\r\n\t\t\tthis.splitSeed='123';\r\n\t\t\tthis.splitRatio='0.7'; // 0.0 or 1.0 for no split\r\n\t\t\tthis.formula='y~.';\r\n\t\t\tthis.threshold='0.5'; // 0.0 or 1.0 for skipping probability predictions\r\n\t\t\tthis.forestSeed='456';\r\n\t\t},\r\n\t\tuserOptionNames:['filename','postprocess','formula','splitSeed','splitRatio','threshold','forestSeed'],\r\n\t};\r\n\tcodeOptions.reset();\r\n\tfor (k in userCodeOptions) {\r\n\t\tcodeOptions[k]=userCodeOptions[k];\r\n\t}\r\n\r\n\treturn {\r\n\t\thtml: htmlOptions,\r\n\t\tcode: codeOptions,\r\n\t\ti18n: i18ns.get(htmlOptions.lang),\r\n\t\tencode: htmlEncode,\r\n\t};\r\n}\r\n\r\nfunction generateCodeTable(options) {\r\n\tvar modelClasses=[BaselineModel,LogregModel,CartModel,ForestModel];\r\n\tvar models=modelClasses.map(function(modelClass){\r\n\t\treturn new modelClass(options);\r\n\t});\r\n\treturn \"\"+\r\n\t\t\"<table><tr>\"+\r\n\t\t\tmodels.map(function(model){\r\n\t\t\t\treturn \"<th>\"+options.i18n(model.getNameId())+\"</th>\";\r\n\t\t\t}).join(\"\")+\r\n\t\t\"</tr><tr>\"+\r\n\t\t\tmodels.map(function(model){\r\n\t\t\t\treturn \"<td><code><pre>\"+model.generateCode()+\"</pre></code></td>\";\r\n\t\t\t}).join(\"\")+\r\n\t\t\"</tr></table>\"\r\n\t;\r\n}\r\n\r\nfunction generateHtml(options) {\r\n\treturn \"\"+\r\n\t\t(options.html.heading?\"<\"+options.html.heading+\">\"+options.i18n('Binary classification')+\"</\"+options.html.heading+\">\":\"\")+\r\n\t\t\"<div class='code-options'>\"+\r\n\t\t\toptions.code.userOptionNames.map(function(optionName){\r\n\t\t\t\treturn \"<div class='code-input' data-option='\"+optionName+\"'>\"+\r\n\t\t\t\t\t\"<span class='label'\"+(optionName=='splitRatio'||optionName=='threshold'?\" title='\"+options.i18n('options.code.'+optionName+'.title')+\"'\":\"\")+\">\"+options.i18n('options.code.'+optionName)+\":</span> \"+\r\n\t\t\t\t\t\"<code>\"+htmlEncode(options.code[optionName])+\"</code>\"+\r\n\t\t\t\t\t\"</div>\";\r\n\t\t\t}).join(\"\")+\r\n\t\t\"</div>\"+\r\n\t\tgenerateCodeTable(options)\r\n\t;\r\n}\r\n\r\nfunction generateStaticHtml(htmlOptions,codeOptions) {\r\n\treturn generateHtml(getOptions(htmlOptions,codeOptions));\r\n}\r\n","var idCounter=0;\r\nfunction generateId() {\r\n\treturn 'statistics-classification-binary-id-'+(idCounter++);\r\n}\r\n\r\n$('.statistics-classification-binary').each(function(){\r\n\tvar containerNode=$(this);\r\n\tvar htmlOptions={\r\n\t\theading: this.nodeName=='SECTION',\r\n\t\tlang: containerNode.closest('[lang]').attr('lang'),\r\n\t\tstorage: containerNode.attr('data-storage'),\r\n\t};\r\n\tvar codeOptions={};\r\n\tif (htmlOptions.storage && localStorage[htmlOptions.storage]) {\r\n\t\tcodeOptions=JSON.parse(localStorage[htmlOptions.storage]);\r\n\t}\r\n\tvar options=getOptions(htmlOptions,codeOptions);\r\n\tcontainerNode.html(generateHtml(options));\r\n\r\n\tfunction applyCodeOptions() {\r\n\t\tcontainerNode.find('table').replaceWith(generateCodeTable(options));\r\n\t\tif (options.html.storage) {\r\n\t\t\tlocalStorage[options.html.storage]=JSON.stringify(options.code);\r\n\t\t}\r\n\t}\r\n\tcontainerNode.find('.code-options [data-option]').each(function(){\r\n\t\t// TODO why parsing out stuff when can just regenerate with inputs instead of generateHtml() with static html?\r\n\t\tvar div=$(this);\r\n\t\tvar id=generateId();\r\n\t\tvar label=div.find('.label');\r\n\t\tvar labelTitle=label.attr('title');\r\n\t\tvar newLabel=$(\"<label for='\"+id+\"'>\"+label.html()+\"</label>\");\r\n\t\tif (labelTitle) {\r\n\t\t\tnewLabel.attr('title',labelTitle);\r\n\t\t}\r\n\t\tlabel.replaceWith(newLabel);\r\n\t\tvar optionName=div.attr('data-option');\r\n\t\tvar code=div.find('code');\r\n\t\tvar optionValue=code.text();\r\n\t\tvar inputTagOpen=\"<input type='text' value='\";\r\n\t\tvar inputTagClose=\"' />\";\r\n\t\tif (optionName=='postprocess') {\r\n\t\t\tinputTagOpen=\"<textarea spellcheck='false'>\";\r\n\t\t\tinputTagClose=\"</textarea>\";\r\n\t\t} else if (optionName=='splitSeed') {\r\n\t\t\tinputTagOpen=\"<input type='number' value='\";\r\n\t\t} else if (optionName=='splitRatio' || optionName=='threshold') {\r\n\t\t\tinputTagOpen=\"<input type='number' min='0' max='1' step='any' value='\";\r\n\t\t}\r\n\t\tcode.replaceWith(\r\n\t\t\t$(inputTagOpen+htmlEncode(optionValue)+inputTagClose).attr('id',id).on('input',function(){ // TODO htmlencode value\r\n\t\t\t\toptions.code[optionName]=this.value;\r\n\t\t\t\tapplyCodeOptions();\r\n\t\t\t})\r\n\t\t);\r\n\t});\r\n\tcontainerNode.find('.code-options').append(\r\n\t\t$(\"<div class='code-input' />\").append(\r\n\t\t\t$(\"<button type='button'>\"+options.i18n('Reset options')+\"</button>\").click(function(){\r\n\t\t\t\toptions.code.reset();\r\n\t\t\t\tcontainerNode.find('.code-options [data-option]').each(function(){\r\n\t\t\t\t\tvar div=$(this);\r\n\t\t\t\t\tvar optionName=div.attr('data-option');\r\n\t\t\t\t\tdiv.find('input').each(function(){\r\n\t\t\t\t\t\tthis.value=options.code[optionName];\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tapplyCodeOptions();\r\n\t\t\t})\r\n\t\t)\r\n\t);\r\n});\r\n","var i18ns={\r\n\tdata:{},\r\n};\r\ni18ns.get=function(lang) {\r\n\tvar defaultLang='en';\r\n\tlang=lang||defaultLang;\r\n\tlang=lang.split('-')[0]; // get primary language subtag\r\n\treturn function(id){\r\n\t\tvar s=i18ns.data[lang][id];\r\n\t\tvar sLang=lang;\r\n\t\tif (s===undefined) {\r\n\t\t\ts=i18ns.data[defaultLang][id];\r\n\t\t\tsLang=defaultLang;\r\n\t\t}\r\n\t\tif (s===undefined) {\r\n\t\t\ts=id;\r\n\t\t\tsLang=null;\r\n\t\t}\r\n\t\ts=s.replace(/\\[\\[(.*?)\\]\\]/g,function(match,p1){\r\n\t\t\tvar link,text;\r\n\t\t\tvar i=p1.indexOf('|');\r\n\t\t\tif (i<0) {\r\n\t\t\t\tlink=p1;\r\n\t\t\t\ttext=p1;\r\n\t\t\t} else {\r\n\t\t\t\tlink=p1.slice(0,i);\r\n\t\t\t\ttext=p1.slice(i+1);\r\n\t\t\t}\r\n\t\t\tvar hreflang=\"\";\r\n\t\t\tif (sLang && lang!=sLang) {\r\n\t\t\t\threflang=\" hreflang='\"+sLang+\"'\";\r\n\t\t\t}\r\n\t\t\treturn \"<a href='https://\"+sLang+\".wikipedia.org/wiki/\"+link.replace(/ /g,'_')+\"'\"+hreflang+\">\"+text+\"</a>\";\r\n\t\t});\r\n\t\tif (sLang && lang!=sLang) {\r\n\t\t\treturn \"<span lang='\"+sLang+\"'>\"+s+\"</span>\";\r\n\t\t} else {\r\n\t\t\treturn s;\r\n\t\t}\r\n\t};\r\n};\r\n","i18ns.data.en={\r\n\t// header\r\n\t'Binary classification':'[[Binary classification]]',\r\n\t// models\r\n\t'model.baseline':'Baseline method',\r\n\t'model.logreg':'[[Logistic regression]]',\r\n\t'model.cart.prob':'[[Decision tree learning|Regression tree]]',\r\n\t'model.cart.class':'[[Decision tree learning|Classification tree]]',\r\n\t'model.forest':'[[Random forest]]',\r\n\t// input labels\r\n\t'options.code.filename':'Input filename',\r\n\t'options.code.postprocess':'Data postprocessing code',\r\n\t'options.code.formula':'Formula',\r\n\t'options.code.splitSeed':'[[Test set|Training/test set]] split seed',\r\n\t'options.code.splitRatio':'[[Test set|Training/test set]] split ratio',\r\n\t'options.code.splitRatio.title':'Set to 0 or 1 to avoid splitting',\r\n\t'options.code.threshold':'Classification probability threshold', // not quite sure\r\n\t'options.code.threshold.title':'Set to 0 or 1 to avoid calculating probabilities and AUCs',\r\n\t'options.code.forestSeed':'Random forest seed',\r\n\t'Reset options':'Reset options',\r\n\t// code comments\r\n\t'comment.data':'load data',\r\n\t'comment.postprocess':'postprocess data',\r\n\t'comment.split':'split data into [[Test set|training/test set]]',\r\n\t'comment.data.model':'build model',\r\n\t'comment.data.prob':'in-sample probability prediction',\r\n\t'comment.data.train.prob':'training set probability prediction',\r\n\t'comment.data.test.prob':'test set probability prediction',\r\n\t'comment.data.class':'in-sample class prediction',\r\n\t'comment.data.train.class':'training set class prediction',\r\n\t'comment.data.test.class':'test set class prediction',\r\n\t'comment.data.acc':'in-sample [[Accuracy_and_precision#In_binary_classification|accuracy]]',\r\n\t'comment.data.train.acc':'training set [[Accuracy_and_precision#In_binary_classification|accuracy]]',\r\n\t'comment.data.test.acc':'test set [[Accuracy_and_precision#In_binary_classification|accuracy]]',\r\n\t'comment.data.auc':'in-sample [[Receiver_operating_characteristic#Area_under_the_curve|AUC]]',\r\n\t'comment.data.train.auc':'training set [[Receiver_operating_characteristic#Area_under_the_curve|AUC]]',\r\n\t'comment.data.test.auc':'test set [[Receiver_operating_characteristic#Area_under_the_curve|AUC]]',\r\n};\r\n","// возможные источники терминологии:\r\n// http://www.machinelearning.ru\r\n// https://yandexdataschool.ru/edu-process/courses/machine-learning\r\n\r\n// точность (accuracy) aka верность, достоверность, правильность; precision тоже называют точностью\r\n// http://www.intuit.ru/studies/courses/6/6/lecture/176?page=5&keyword_content=%D1%82%D0%BE%D1%87%D0%BD%D0%BE%D1%81%D1%82%D1%8C\r\n//\t\"точность (процент корректно классифицированных наблюдений)\"\r\n// http://gis-lab.info/qa/error-matrix.html\r\n//\tтоже за \"точность\"\r\n\r\ni18ns.data.ru={\r\n\t// header\r\n\t'Binary classification':'Бинарная классификация',\r\n\t// models\r\n\t'model.baseline':'Базовый метод', // [?]\r\n\t'model.logreg':'[[Логистическая регрессия]]',\r\n\t'model.cart.prob':'[[Дерево принятия решений|Регрессионное дерево]]',\r\n\t'model.cart.class':'[[Дерево принятия решений|Классификационное дерево]]',\r\n\t'model.forest':'[[Random forest|Случайный лес]]',\r\n\t// input labels\r\n\t'options.code.filename':'Имя входного файла',\r\n\t'options.code.postprocess':'Код для обработки данных',\r\n\t'options.code.formula':'Формула',\r\n\t'options.code.splitSeed':'Инициализация (seed) деления на обучающую/тестовую выборку', // http://www.machinelearning.ru/wiki/index.php?title=%D0%92%D1%8B%D0%B1%D0%BE%D1%80%D0%BA%D0%B0\r\n\t'options.code.splitRatio':'Доля обучающей выборки при делении',\r\n\t'options.code.splitRatio.title':'При значениях 0 и 1 деление выполняться не будет',\r\n\t'options.code.threshold':'Порог на вероятность для классификации',\r\n\t'options.code.threshold.title':'При значениях 0 и 1 вероятности и AUC&#39;и вычисляться не будут',\r\n\t'options.code.forestSeed':'Инициализация (seed) случайного леса',\r\n\t'Reset options':'Сбросить настройки',\r\n\t// code comments\r\n\t'comment.data':'загрузка данных',\r\n\t'comment.postprocess':'обработка данных',\r\n\t'comment.split':'деление данных на обучающую/тестовую выборку',\r\n\t'comment.data.model':'построение модели',\r\n\t'comment.data.prob':'предсказание вероятностей на выборке',\r\n\t'comment.data.train.prob':'предсказание вероятностей на обучающей выборке',\r\n\t'comment.data.test.prob':'предсказание вероятностей на тестовой выборке',\r\n\t'comment.data.class':'предсказание классов на выборке',\r\n\t'comment.data.train.class':'предсказание классов на обучающей выборке',\r\n\t'comment.data.test.class':'предсказание классов на тестовой выборке',\r\n\t'comment.data.acc':'точность (accuracy) на выборке',\r\n\t'comment.data.train.acc':'точность (accuracy) на обучающей выборке',\r\n\t'comment.data.test.acc':'точность (accuracy) на тестовой выборке',\r\n\t'comment.data.auc':'[[ROC-кривая#.D0.9F.D0.BB.D0.BE.D1.89.D0.B0.D0.B4.D1.8C_.D0.BF.D0.BE.D0.B4_.D0.BA.D1.80.D0.B8.D0.B2.D0.BE.D0.B9|AUC]] на выборке',\r\n\t'comment.data.train.auc':'[[ROC-кривая#.D0.9F.D0.BB.D0.BE.D1.89.D0.B0.D0.B4.D1.8C_.D0.BF.D0.BE.D0.B4_.D0.BA.D1.80.D0.B8.D0.B2.D0.BE.D0.B9|AUC]] на обучающей выборке',\r\n\t'comment.data.test.auc':'[[ROC-кривая#.D0.9F.D0.BB.D0.BE.D1.89.D0.B0.D0.B4.D1.8C_.D0.BF.D0.BE.D0.B4_.D0.BA.D1.80.D0.B8.D0.B2.D0.BE.D0.B9|AUC]] на тестовой выборке',\r\n};\r\n","var Model=function(options){\r\n\tthis.options=options;\r\n};\r\nModel.prototype.generateCode=function(){\r\n\treturn this.generateLines().join(\"\\n\");\r\n};\r\nModel.prototype.generateLines=function(){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\tvar data=code.data;\r\n\tvar lines=[];\r\n\r\n\tfunction concatModelLines(data) {\r\n\t\tlines=lines.concat([this.comment('data.model')]);\r\n\t\tif (code.needProb) {\r\n\t\t\tlines=lines.concat(this.generateProbModelLines(data));\r\n\t\t} else {\r\n\t\t\tlines=lines.concat(this.generateClassModelLines(data));\r\n\t\t}\r\n\t}\r\n\tfunction concatPostModelLines(data,dataset) {\r\n\t\tvar isNewdata=dataset=='data.test';\r\n\t\tif (code.needProb) {\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\t[this.comment(dataset+'.prob')],\r\n\t\t\t\tthis.generateProbLines(data,isNewdata),\r\n\t\t\t\t[this.comment(dataset+'.class')],\r\n\t\t\t\tthis.generateClassFromProbLines(data)\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\t[this.comment(dataset+'.class')],\r\n\t\t\t\tthis.generateClassFromModelLines(data,isNewdata)\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines=lines.concat(\r\n\t\t\t[this.comment(dataset+'.acc')],\r\n\t\t\tthis.generateAccLines(data)\r\n\t\t);\r\n\t\tif (code.needProb) {\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\t[this.comment(dataset+'.auc')],\r\n\t\t\t\tthis.generateAucLines(data)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tlines=lines.concat(this.listLibraries().map(function(lib){\r\n\t\treturn \"library(\"+lib+\")\";\r\n\t}),[\r\n\t\t\"\",\r\n\t\tthis.comment('data'),\r\n\t\te(data)+\"=read.csv('\"+e(code.filename)+\"')\",\r\n\t]);\r\n\tif (code.postprocess) {\r\n\t\tlines=lines.concat([\r\n\t\t\tthis.comment('postprocess'),\r\n\t\t\te(code.postprocess),\r\n\t\t]);\r\n\t}\r\n\tif (code.needSplit) {\r\n\t\tlines=lines.concat([\r\n\t\t\tthis.comment('split'),\r\n\t\t\t\"set.seed(\"+e(code.splitSeed)+\")\",\r\n\t\t\t\"split=sample.split(\"+e(data)+\"$\"+e(code.y)+\",SplitRatio=\"+e(code.splitRatio)+\")\",\r\n\t\t\te(data.train)+\"=\"+e(data)+\"[split,]\",\r\n\t\t\te(data.test)+\"=\"+e(data)+\"[!split,]\",\r\n\t\t]);\r\n\t\tconcatModelLines.call(this,data.train);\r\n\t\tconcatPostModelLines.call(this,data.train,'data.train');\r\n\t\tconcatPostModelLines.call(this,data.test,'data.test');\r\n\t} else {\r\n\t\tconcatModelLines.call(this,data);\r\n\t\tconcatPostModelLines.call(this,data,'data');\r\n\t}\r\n\treturn lines;\r\n};\r\nModel.prototype.generateClassFromProbLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data['class'])+\"=+(\"+e(data.prob)+\">=\"+e(code.threshold)+\")\",\r\n\t];\r\n};\r\nModel.prototype.generateAccLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.acc)+\"=mean(\"+e(data)+\"$\"+e(code.y)+\"==\"+e(data['class'])+\")\",\r\n\t];\r\n};\r\nModel.prototype.generateAucLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.auc)+\"=performance(\",\r\n\t\t\"\\t\"+\"prediction(\"+e(data.prob)+\",\"+e(data)+\"$\"+e(code.y)+\"),'auc'\",\r\n\t\t\")@y.values[[1]]\",\r\n\t];\r\n};\r\nModel.prototype.listLibraries=function(){\r\n\tlibs=[];\r\n\tif (this.options.code.needProb) {\r\n\t\tlibs.push('ROCR'); // for AUC computation\r\n\t}\r\n\tif (this.options.code.needSplit) {\r\n\t\tlibs.push('caTools');\r\n\t}\r\n\treturn libs;\r\n\t// TODO require libs from code\r\n};\r\nModel.prototype.comment=function(id){\r\n\treturn \"# \"+this.options.i18n('comment.'+id);\r\n};\r\n\r\nvar BaselineModel=function(options){\r\n\tModel.call(this,options);\r\n};\r\nBaselineModel.prototype=Object.create(Model.prototype);\r\nBaselineModel.prototype.constructor=BaselineModel;\r\nBaselineModel.prototype.getNameId=function(){\r\n\treturn 'model.baseline';\r\n};\r\nBaselineModel.prototype.generateProbModelLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.model)+\"=mean(\"+e(data)+\"$\"+e(code.y)+\")\",\r\n\t];\r\n};\r\nBaselineModel.prototype.generateClassModelLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.model)+\"=names(sort(-table(\"+e(data)+\"$\"+e(code.y)+\")))[1]\", // http://stackoverflow.com/a/2547551\r\n\t];\r\n};\r\nBaselineModel.prototype.generateProbLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.prob)+\"=rep_len(\"+e(data.model)+\",nrow(\"+e(data)+\"))\",\r\n\t];\r\n};\r\nBaselineModel.prototype.generateClassFromModelLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data['class'])+\"=rep_len(\"+e(data.model)+\",nrow(\"+e(data)+\"))\",\r\n\t];\r\n};\r\n\r\nvar LogregModel=function(options){\r\n\tModel.call(this,options);\r\n};\r\nLogregModel.prototype=Object.create(Model.prototype);\r\nLogregModel.prototype.constructor=LogregModel;\r\nLogregModel.prototype.getNameId=function(){\r\n\treturn 'model.logreg';\r\n};\r\nLogregModel.prototype.generateProbModelLines=\r\nLogregModel.prototype.generateClassModelLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.model)+\"=glm(\"+e(code.formula)+\",data=\"+e(data)+\",family=binomial)\",\r\n\t];\r\n};\r\nLogregModel.prototype.generateProbLines=function(data,isNewdata){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.prob)+\"=predict(\"+e(data.model)+(isNewdata?\",newdata=\"+e(data):\"\")+\",type='response')\",\r\n\t];\r\n};\r\nLogregModel.prototype.generateClassFromModelLines=function(data,isNewdata){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data['class'])+\"=+(predict(\"+e(data.model)+(isNewdata?\",newdata=\"+e(data):\"\")+\",type='response')>0.5)\",\r\n\t];\r\n};\r\n\r\nvar CartModel=function(options){\r\n\tModel.call(this,options);\r\n};\r\nCartModel.prototype=Object.create(Model.prototype);\r\nCartModel.prototype.constructor=CartModel;\r\nCartModel.prototype.getNameId=function(){\r\n\tif (this.options.code.needProb) {\r\n\t\treturn 'model.cart.prob';\r\n\t} else {\r\n\t\treturn 'model.cart.class';\r\n\t}\r\n};\r\nCartModel.prototype.generateProbModelLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.model)+\"=rpart(\"+e(code.formula)+\",data=\"+e(data)+\")\",\r\n\t];\r\n};\r\nCartModel.prototype.generateClassModelLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.model)+\"=rpart(\"+e(code.formula)+\",data=\"+e(data)+\",method='class')\",\r\n\t];\r\n};\r\nCartModel.prototype.generateProbLines=function(data,isNewdata){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.prob)+\"=predict(\"+e(data.model)+(isNewdata?\",newdata=\"+e(data):\"\")+\")\",\r\n\t];\r\n};\r\nCartModel.prototype.generateClassFromModelLines=function(data,isNewdata){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data['class'])+\"=predict(\"+e(data.model)+(isNewdata?\",newdata=\"+e(data):\"\")+\",type='class')\",\r\n\t];\r\n};\r\nCartModel.prototype.listLibraries=function(){\r\n\treturn Model.prototype.listLibraries.call(this).concat([\r\n\t\t'rpart',\r\n\t]);\r\n};\r\n\r\nvar ForestModel=function(options){\r\n\tModel.call(this,options);\r\n};\r\nForestModel.prototype=Object.create(Model.prototype);\r\nForestModel.prototype.constructor=ForestModel;\r\nForestModel.prototype.getNameId=function(){\r\n\treturn 'model.forest';\r\n};\r\nForestModel.prototype.generateProbModelLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\t\"set.seed(\"+e(code.forestSeed)+\")\",\r\n\t\te(data.model)+\"=randomForest(\"+e(code.formula)+\",data=\"+e(data)+\")\",\r\n\t];\r\n};\r\nForestModel.prototype.generateClassModelLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\t\"set.seed(\"+e(code.forestSeed)+\")\",\r\n\t\te(data.model)+\"=randomForest(as.factor(\"+e(code.y)+\")~\"+e(code.rhs)+\",data=\"+e(data)+\")\",\r\n\t];\r\n};\r\nForestModel.prototype.generateProbLines=function(data,isNewdata){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.prob)+\"=predict(\"+e(data.model)+(isNewdata?\",newdata=\"+e(data):\"\")+\")\",\r\n\t];\r\n};\r\nForestModel.prototype.generateClassFromModelLines=function(data,isNewdata){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data['class'])+\"=predict(\"+e(data.model)+(isNewdata?\",newdata=\"+e(data):\"\")+\")\",\r\n\t];\r\n};\r\nForestModel.prototype.listLibraries=function(){\r\n\treturn Model.prototype.listLibraries.call(this).concat([\r\n\t\t'randomForest',\r\n\t]);\r\n};\r\n"],"sourceRoot":"../src"}