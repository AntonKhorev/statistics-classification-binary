{"version":3,"sources":["intro.js","html.js","main.js","i18n.js","en.js","ru.js","model.js"],"names":["$","htmlEncode","value","toString","replace","getOptions","userHtmlOptions","userCodeOptions","undefined","k","htmlOptions","heading","codeOptions",{"end":{"file":"?","comments_before":[],"nlb":false,"endpos":17553,"endcol":10,"endline":482,"pos":17549,"col":6,"line":482,"value":"data","type":"name"},"start":{"file":"?","comments_before":[],"nlb":false,"endpos":17553,"endcol":10,"endline":482,"pos":17549,"col":6,"line":482,"value":"data","type":"name"},"name":"data"},"data","dataname","i","this","filename","lastIndexOf","substring","o","forEach","prop","set","model","y","formula","indexOf","rhs","toJSON","savedObject","userOptionNames","reset","postprocess","split","predict","forestSeed","splitAvailableValues","predictAvailableValues","html","code","i18n","i18ns","get","lang","encode","generateCodeTable","options","modelClasses","BaselineModel","LogregModel","CartModel","ForestModel","models","map","modelClass","getNameId","join","generateCode","generateHtml","optionName","generateId","idCounter","defaultLang","id","s","sLang","match","p1","link","text","slice","hreflang","en","Binary classification","model.baseline","model.logreg","model.cart.prob","model.cart.class","model.forest","options.code.filename","options.code.postprocess","options.code.split","options.code.split.none","options.code.split.conditional","options.code.split.random","options.code.split.conditional.condition","options.code.split.random.seed","options.code.split.random.ratio","options.code.formula","options.code.predict","options.code.predict.class","options.code.predict.probability","options.code.predict.probability.threshold","options.code.forestSeed","Reset options","comment.data","comment.postprocess","comment.split","comment.data.model","comment.data.prob","comment.data.train.prob","comment.data.test.prob","comment.data.class","comment.data.train.class","comment.data.test.class","comment.data.acc","comment.data.train.acc","comment.data.test.acc","comment.data.sen","comment.data.train.sen","comment.data.test.sen","comment.data.spe","comment.data.train.spe","comment.data.test.spe","comment.data.auc","comment.data.train.auc","comment.data.test.auc","ru","Model","prototype","generateLines","concatModelLines","lines","concat","comment","generateProbModelLines","generateClassModelLines","concatPostModelLines","dataset","isNewdata","generateProbLines","generateClassFromProbLines","generateClassFromModelLines","generateAccLines","generateSenLines","generateSpeLines","generateAucLines","e","listLibraries","lib","call","train","test","prob","acc","sen","spe","auc","libs","push","Object","create","constructor","each","applyCodeOptions","containerNode","find","replaceWith","storage","localStorage","JSON","stringify","showHideSuboptionInputs","optionValue","show","not","hide","createOptionInput","openClose","inputTag","on","select","append","optionAvailableValue","val","nodeName","closest","attr","parse","div","label","labelTitle","newLabel","length","click"],"mappings":"AAAAA,EAAA,WCAA,QAAAC,GAAAC,GAEA,MAAAA,GAAAC,WACAC,QAAA,KAAA,SAAAA,QAAA,KAAA,UAAAA,QAAA,KAAA,SACAA,QAAA,KAAA,QAAAA,QAAA,KAAA,QAKA,QAAAC,GAAAC,EAAAC,GACAC,SAAAF,IAAAA,MACAE,SAAAD,IAAAA,KACA,IAAAE,GAGAC,IACA,KAAAD,IAAAH,GACAI,EAAAD,GAAAH,EAAAG,EAEA,IAAAC,EAAAC,UACAD,EAAAC,QAAA,KAIA,IAAAC,IACAC,GAAAC,QACA,GACAC,GADAC,EAAAC,KAAAC,SAAAC,YAAA,IAGAJ,GADAC,EAAA,EACAC,KAAAC,SAAAE,UAAA,EAAAJ,GAEAC,KAAAC,QAEA,IAAAG,IACAlB,SAAA,WACA,MAAAY,IAiBA,QAdA,QAAA,OAAA,QAAA,MAAA,MAAA,MAAA,OAAAO,QAAA,SAAAC,GACAF,EAAAE,GAAAR,EAAA,IAAAQ,KAEA,QAAA,QAAAD,QAAA,SAAAE,GACAH,EAAAG,IACArB,SAAA,WACA,MAAAY,GAAA,IAAAS,IAGAH,EAAAG,GAAAC,MAAAV,EAAA,UACA,OAAA,QAAA,MAAA,MAAA,MAAA,OAAAO,QAAA,SAAAC,GACAF,EAAAG,GAAAD,GAAAR,EAAA,IAAAS,EAAA,IAAAD,MAGAF,GAEAR,GAAAa,KACA,GAAAV,GAAAC,KAAAU,QAAAC,QAAA,IACA,OAAAZ,IAAA,EACAC,KAAAU,QAAAP,UAAA,EAAAJ,GAGAC,KAAAU,SAGAd,GAAAgB,OACA,GAAAb,GAAAC,KAAAU,QAAAC,QAAA,IACA,OAAAZ,IAAA,EACAC,KAAAU,QAAAP,UAAAJ,EAAA,GAGAC,KAAAU,SAGAG,OAAA,WACA,GAAAC,KAIA,OAHAd,MAAAe,gBAAAV,QAAA,SAAAb,GACAsB,EAAAtB,GAAAQ,KAAAR,IACAQ,MACAc,GAEAE,MAAA,WACAhB,KAAAC,SAAA,WACAD,KAAAiB,YAAA,GACAjB,KAAAkB,MAAA,SACAlB,KAAA,+BAAA,MACAA,KAAA,qBAAA,MACAA,KAAA,sBAAA,MACAA,KAAAU,QAAA,MACAV,KAAAmB,QAAA,cACAnB,KAAA,iCAAA,MACAA,KAAAoB,WAAA,OAEAL,iBACA,WAAA,cACA,QAAA,8BAAA,oBAAA,qBACA,UACA,UAAA,gCACA,cAEAM,sBAAA,OAAA,cAAA,UACAC,wBAAA,QAAA,eAEA3B,GAAAqB,OACA,KAAAxB,IAAAF,GACAK,EAAAH,GAAAF,EAAAE,EAGA,QACA+B,KAAA9B,EACA+B,KAAA7B,EACA8B,KAAAC,EAAAC,IAAAlC,EAAAmC,MACAC,OAAA7C,GAIA,QAAA8C,GAAAC,GACA,GAAAC,IAAAC,EAAAC,EAAAC,EAAAC,GACAC,EAAAL,EAAAM,IAAA,SAAAC,GACA,MAAA,IAAAA,GAAAR,IAEA,OAAA,cAEAM,EAAAC,IAAA,SAAA9B,GACA,MAAA,OAAAuB,EAAAN,KAAAjB,EAAAgC,aAAA,UACAC,KAAA,IACA,YACAJ,EAAAC,IAAA,SAAA9B,GACA,MAAA,kBAAAA,EAAAkC,eAAA,uBACAD,KAAA,IACA,gBAIA,QAAAE,GAAAZ,GACA,MAAA,IACAA,EAAAR,KAAA7B,QAAA,IAAAqC,EAAAR,KAAA7B,QAAA,IAAAqC,EAAAN,KAAA,yBAAA,KAAAM,EAAAR,KAAA7B,QAAA,IAAA,IACA,6BACAqC,EAAAP,KAAAT,gBAAAuB,IAAA,SAAAM,GACA,MAAA,wCAAAA,EAAA,yBACAb,EAAAN,KAAA,gBAAAmB,GAAA,kBACA5D,EAAA+C,EAAAP,KAAAoB,IAAA,kBAEAH,KAAA,IACA,SACAX,EAAAC,GC9IA,QAAAc,KACA,MAAA,uCAAAC,ICFA,GAAApB,IACA7B,QAEA6B,GAAAC,IAAA,SAAAC,GACA,GAAAmB,GAAA,IAGA,OAFAnB,GAAAA,GAAAmB,EACAnB,EAAAA,EAAAV,MAAA,KAAA,GACA,SAAA8B,GACA,GAAAC,GAAAvB,EAAA7B,KAAA+B,GAAAoB,GACAE,EAAAtB,CAyBA,OAxBArC,UAAA0D,IACAA,EAAAvB,EAAA7B,KAAAkD,GAAAC,GACAE,EAAAH,GAEAxD,SAAA0D,IACAA,EAAAD,EACAE,EAAA,MAEAD,EAAAA,EAAA9D,QAAA,iBAAA,SAAAgE,EAAAC,GACA,GAAAC,GAAAC,EACAvD,EAAAqD,EAAAzC,QAAA,IACA,GAAAZ,GACAsD,EAAAD,EACAE,EAAAF,IAEAC,EAAAD,EAAAG,MAAA,EAAAxD,GACAuD,EAAAF,EAAAG,MAAAxD,EAAA,GAEA,IAAAyD,GAAA,EAIA,OAHAN,IAAAtB,GAAAsB,IACAM,EAAA,cAAAN,EAAA,KAEA,oBAAAA,EAAA,uBAAAG,EAAAlE,QAAA,KAAA,KAAA,IAAAqE,EAAA,IAAAF,EAAA,SAEAJ,GAAAtB,GAAAsB,EACA,eAAAA,EAAA,KAAAD,EAAA,UAEAA,ICrCAvB,EAAA7B,KAAA4D,IAEAC,wBAAA,4BAEAC,iBAAA,kBACAC,eAAA,0BACAC,kBAAA,6CACAC,mBAAA,iDACAC,eAAA,oBAEAC,wBAAA,iBACAC,2BAAA,2BACAC,qBAAA,uCACAC,0BAAA,OACAC,iCAAA,cACAC,4BAAA,SACAC,2CAAA,yBACAC,iCAAA,aACAC,kCAAA,cACAC,uBAAA,UACAC,uBAAA,iBACAC,6BAAA,UACAC,mCAAA,gBACAC,6CAAA,uCACAC,0BAAA,qBACAC,gBAAA,gBAEAC,eAAA,YACAC,sBAAA,mBACAC,gBAAA,iDACAC,qBAAA,cACAC,oBAAA,mCACAC,0BAAA,sCACAC,yBAAA,kCACAC,qBAAA,6BACAC,2BAAA,gCACAC,0BAAA,4BACAC,mBAAA,yEACAC,yBAAA,4EACAC,wBAAA,wEACAC,mBAAA,oEACAC,yBAAA,uEACAC,wBAAA,mEACAC,mBAAA,oEACAC,yBAAA,uEACAC,wBAAA,mEACAC,mBAAA,2EACAC,yBAAA,8EACAC,wBAAA,2ECtCA3E,EAAA7B,KAAAyG,IAEA5C,wBAAA,yBAEAC,iBAAA,gBACAC,eAAA,8BACAC,kBAAA,mDACAC,mBAAA,uDACAC,eAAA,kCAEAC,wBAAA,qBACAC,2BAAA,2BACAC,qBAAA,wCACAC,0BAAA,MACAC,iCAAA,aACAC,4BAAA,YACAC,2CAAA,wCACAC,iCAAA,0CACAC,kCAAA,qCACAC,uBAAA,UACAC,uBAAA,uBACAC,6BAAA,SACAC,mCAAA,6BACAC,6CAAA,yCACAC,0BAAA,uCACAC,gBAAA,qBAEAC,eAAA,kBACAC,sBAAA,mBACAC,gBAAA,+CACAC,qBAAA,oBACAC,oBAAA,uCACAC,0BAAA,iDACAC,yBAAA,gDACAC,qBAAA,kCACAC,2BAAA,4CACAC,0BAAA,2CACAC,mBAAA,iCACAC,yBAAA,2CACAC,wBAAA,0CACAC,mBAAA,8BACAC,yBAAA,wCACAC,wBAAA,uCACAC,mBAAA,2BACAC,yBAAA,qCACAC,wBAAA,oCACAC,mBAAA,mIACAC,yBAAA,6IACAC,wBAAA,4IC1DA,IAAAE,GAAA,SAAAxE,GACA/B,KAAA+B,QAAAA,EAEAwE,GAAAC,UAAA9D,aAAA,WACA,MAAA1C,MAAAyG,gBAAAhE,KAAA,OAEA8D,EAAAC,UAAAC,cAAA,WAMA,QAAAC,GAAA7G,GACA8G,EAAAA,EAAAC,QAAA5G,KAAA6G,QAAA,gBAEAF,EADA,eAAAnF,EAAAL,QACAwF,EAAAC,OAAA5G,KAAA8G,uBAAAjH,IAEA8G,EAAAC,OAAA5G,KAAA+G,wBAAAlH,IAGA,QAAAmH,GAAAnH,EAAAoH,GACA,GAAAC,GAAA,aAAAD,CAEAN,GADA,eAAAnF,EAAAL,QACAwF,EAAAC,QACA5G,KAAA6G,QAAAI,EAAA,UACAjH,KAAAmH,kBAAAtH,EAAAqH,IACAlH,KAAA6G,QAAAI,EAAA,WACAjH,KAAAoH,2BAAAvH,IAGA8G,EAAAC,QACA5G,KAAA6G,QAAAI,EAAA,WACAjH,KAAAqH,4BAAAxH,EAAAqH,IAGAP,EAAAA,EAAAC,QACA5G,KAAA6G,QAAAI,EAAA,SACAjH,KAAAsH,iBAAAzH,IACAG,KAAA6G,QAAAI,EAAA,SACAjH,KAAAuH,iBAAA1H,IACAG,KAAA6G,QAAAI,EAAA,SACAjH,KAAAwH,iBAAA3H,IAEA,eAAA2B,EAAAL,UACAwF,EAAAA,EAAAC,QACA5G,KAAA6G,QAAAI,EAAA,SACAjH,KAAAyH,iBAAA5H,KAvCA,GAAA6H,GAAA1H,KAAA+B,QAAAF,OACAL,EAAAxB,KAAA+B,QAAAP,KACA3B,EAAA2B,EAAA3B,KACA8G,IA8EA,OArCAA,GAAAA,EAAAC,OAAA5G,KAAA2H,gBAAArF,IAAA,SAAAsF,GACA,MAAA,WAAAA,EAAA,OAEA,GACA5H,KAAA6G,QAAA,QACAa,EAAA7H,GAAA,cAAA6H,EAAAlG,EAAAvB,UAAA,OAEAuB,EAAAP,cACA0F,EAAAA,EAAAC,QACA5G,KAAA6G,QAAA,eACAa,EAAAlG,EAAAP,gBAGA,QAAAO,EAAAN,OACAwF,EAAAmB,KAAA7H,KAAAH,GACAmH,EAAAa,KAAA7H,KAAAH,EAAA,SACA,eAAA2B,EAAAN,OACAyF,EAAAA,EAAAC,QACA5G,KAAA6G,QAAA,SACAa,EAAA7H,EAAAiI,OAAA,WAAAJ,EAAA7H,GAAA,IAAA6H,EAAAlG,EAAA,gCAAA,IACAkG,EAAA7H,EAAAkI,MAAA,WAAAL,EAAA7H,GAAA,MAAA6H,EAAAlG,EAAA,gCAAA,OAEAkF,EAAAmB,KAAA7H,KAAAH,EAAAiI,OACAd,EAAAa,KAAA7H,KAAAH,EAAAiI,MAAA,cACAd,EAAAa,KAAA7H,KAAAH,EAAAkI,KAAA,cACA,UAAAvG,EAAAN,QACAyF,EAAAA,EAAAC,QACA5G,KAAA6G,QAAA,SACA,YAAAa,EAAAlG,EAAA,sBAAA,IACA,sBAAAkG,EAAA7H,GAAA,IAAA6H,EAAAlG,EAAAf,GAAA,eAAAiH,EAAAlG,EAAA,uBAAA,IACAkG,EAAA7H,EAAAiI,OAAA,IAAAJ,EAAA7H,GAAA,WACA6H,EAAA7H,EAAAkI,MAAA,IAAAL,EAAA7H,GAAA,cAEA6G,EAAAmB,KAAA7H,KAAAH,EAAAiI,OACAd,EAAAa,KAAA7H,KAAAH,EAAAiI,MAAA,cACAd,EAAAa,KAAA7H,KAAAH,EAAAkI,KAAA,cAEApB,GAEAJ,EAAAC,UAAAY,2BAAA,SAAAvH,GACA,GAAA6H,GAAA1H,KAAA+B,QAAAF,OACAL,EAAAxB,KAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAA,UAAA,MAAA6H,EAAA7H,EAAAmI,MAAA,KAAAN,EAAAlG,EAAA,kCAAA,MAGA+E,EAAAC,UAAAc,iBAAA,SAAAzH,GACA,GAAA6H,GAAA1H,KAAA+B,QAAAF,OACAL,EAAAxB,KAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAAoI,KAAA,SAAAP,EAAA7H,GAAA,IAAA6H,EAAAlG,EAAAf,GAAA,KAAAiH,EAAA7H,EAAA,UAAA,MAGA0G,EAAAC,UAAAe,iBAAA,SAAA1H,GACA,GAAA6H,GAAA1H,KAAA+B,QAAAF,OACAL,EAAAxB,KAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAAqI,KAAA,SAAAR,EAAA7H,EAAA,UAAA,IAAA6H,EAAA7H,GAAA,IAAA6H,EAAAlG,EAAAf,GAAA,aAGA8F,EAAAC,UAAAgB,iBAAA,SAAA3H,GACA,GAAA6H,GAAA1H,KAAA+B,QAAAF,OACAL,EAAAxB,KAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAAsI,KAAA,SAAAT,EAAA7H,EAAA,UAAA,IAAA6H,EAAA7H,GAAA,IAAA6H,EAAAlG,EAAAf,GAAA,aAGA8F,EAAAC,UAAAiB,iBAAA,SAAA5H,GACA,GAAA6H,GAAA1H,KAAA+B,QAAAF,OACAL,EAAAxB,KAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAAuI,KAAA,gBACA,eAAAV,EAAA7H,EAAAmI,MAAA,IAAAN,EAAA7H,GAAA,IAAA6H,EAAAlG,EAAAf,GAAA,UACA,oBAGA8F,EAAAC,UAAAmB,cAAA,WAQA,MAPAU,SACA,eAAArI,KAAA+B,QAAAP,KAAAL,SACAkH,KAAAC,KAAA,QAEA,UAAAtI,KAAA+B,QAAAP,KAAAN,OACAmH,KAAAC,KAAA,WAEAD,MAGA9B,EAAAC,UAAAK,QAAA,SAAA7D,GACA,MAAA,KAAAhD,KAAA+B,QAAAN,KAAA,WAAAuB,GAGA,IAAAf,GAAA,SAAAF,GACAwE,EAAAsB,KAAA7H,KAAA+B,GAEAE,GAAAuE,UAAA+B,OAAAC,OAAAjC,EAAAC,WACAvE,EAAAuE,UAAAiC,YAAAxG,EACAA,EAAAuE,UAAAhE,UAAA,WACA,MAAA,kBAEAP,EAAAuE,UAAAM,uBAAA,SAAAjH,GACA,GAAA6H,GAAA1H,KAAA+B,QAAAF,OACAL,EAAAxB,KAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAAW,OAAA,SAAAkH,EAAA7H,GAAA,IAAA6H,EAAAlG,EAAAf,GAAA,MAGAwB,EAAAuE,UAAAO,wBAAA,SAAAlH,GACA,GAAA6H,GAAA1H,KAAA+B,QAAAF,OACAL,EAAAxB,KAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAAW,OAAA,sBAAAkH,EAAA7H,GAAA,IAAA6H,EAAAlG,EAAAf,GAAA,WAGAwB,EAAAuE,UAAAW,kBAAA,SAAAtH,GACA,GAAA6H,GAAA1H,KAAA+B,QAAAF,MACA7B,MAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAAmI,MAAA,YAAAN,EAAA7H,EAAAW,OAAA,SAAAkH,EAAA7H,GAAA,OAGAoC,EAAAuE,UAAAa,4BAAA,SAAAxH,GACA,GAAA6H,GAAA1H,KAAA+B,QAAAF,MACA7B,MAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAA,UAAA,YAAA6H,EAAA7H,EAAAW,OAAA,SAAAkH,EAAA7H,GAAA,MAIA,IAAAqC,GAAA,SAAAH,GACAwE,EAAAsB,KAAA7H,KAAA+B,GAEAG,GAAAsE,UAAA+B,OAAAC,OAAAjC,EAAAC,WACAtE,EAAAsE,UAAAiC,YAAAvG,EACAA,EAAAsE,UAAAhE,UAAA,WACA,MAAA,gBAEAN,EAAAsE,UAAAM,uBACA5E,EAAAsE,UAAAO,wBAAA,SAAAlH,GACA,GAAA6H,GAAA1H,KAAA+B,QAAAF,OACAL,EAAAxB,KAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAAW,OAAA,QAAAkH,EAAAlG,EAAAd,SAAA,SAAAgH,EAAA7H,GAAA,sBAGAqC,EAAAsE,UAAAW,kBAAA,SAAAtH,EAAAqH,GACA,GAAAQ,GAAA1H,KAAA+B,QAAAF,MACA7B,MAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAAmI,MAAA,YAAAN,EAAA7H,EAAAW,QAAA0G,EAAA,YAAAQ,EAAA7H,GAAA,IAAA,sBAGAqC,EAAAsE,UAAAa,4BAAA,SAAAxH,EAAAqH,GACA,GAAAQ,GAAA1H,KAAA+B,QAAAF,MACA7B,MAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAA,UAAA,cAAA6H,EAAA7H,EAAAW,QAAA0G,EAAA,YAAAQ,EAAA7H,GAAA,IAAA,0BAIA,IAAAsC,GAAA,SAAAJ,GACAwE,EAAAsB,KAAA7H,KAAA+B,GAEAI,GAAAqE,UAAA+B,OAAAC,OAAAjC,EAAAC,WACArE,EAAAqE,UAAAiC,YAAAtG,EACAA,EAAAqE,UAAAhE,UAAA,WACA,MAAA,SAAAxC,KAAA+B,QAAAP,KAAAL,QACA,mBACA,eAAAnB,KAAA+B,QAAAP,KAAAL,QACA,kBADA,QAIAgB,EAAAqE,UAAAM,uBAAA,SAAAjH,GACA,GAAA6H,GAAA1H,KAAA+B,QAAAF,OACAL,EAAAxB,KAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAAW,OAAA,UAAAkH,EAAAlG,EAAAd,SAAA,SAAAgH,EAAA7H,GAAA,MAGAsC,EAAAqE,UAAAO,wBAAA,SAAAlH,GACA,GAAA6H,GAAA1H,KAAA+B,QAAAF,OACAL,EAAAxB,KAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAAW,OAAA,UAAAkH,EAAAlG,EAAAd,SAAA,SAAAgH,EAAA7H,GAAA,qBAGAsC,EAAAqE,UAAAW,kBAAA,SAAAtH,EAAAqH,GACA,GAAAQ,GAAA1H,KAAA+B,QAAAF,MACA7B,MAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAAmI,MAAA,YAAAN,EAAA7H,EAAAW,QAAA0G,EAAA,YAAAQ,EAAA7H,GAAA,IAAA,MAGAsC,EAAAqE,UAAAa,4BAAA,SAAAxH,EAAAqH,GACA,GAAAQ,GAAA1H,KAAA+B,QAAAF,MACA7B,MAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAA,UAAA,YAAA6H,EAAA7H,EAAAW,QAAA0G,EAAA,YAAAQ,EAAA7H,GAAA,IAAA,mBAGAsC,EAAAqE,UAAAmB,cAAA,WACA,MAAApB,GAAAC,UAAAmB,cAAAE,KAAA7H,MAAA4G,QACA,UAIA,IAAAxE,GAAA,SAAAL,GACAwE,EAAAsB,KAAA7H,KAAA+B,GAEAK,GAAAoE,UAAA+B,OAAAC,OAAAjC,EAAAC,WACApE,EAAAoE,UAAAiC,YAAArG,EACAA,EAAAoE,UAAAhE,UAAA,WACA,MAAA,gBAEAJ,EAAAoE,UAAAM,uBAAA,SAAAjH,GACA,GAAA6H,GAAA1H,KAAA+B,QAAAF,OACAL,EAAAxB,KAAA+B,QAAAP,IACA,QACA,YAAAkG,EAAAlG,EAAAJ,YAAA,IACAsG,EAAA7H,EAAAW,OAAA,iBAAAkH,EAAAlG,EAAAd,SAAA,SAAAgH,EAAA7H,GAAA,MAGAuC,EAAAoE,UAAAO,wBAAA,SAAAlH,GACA,GAAA6H,GAAA1H,KAAA+B,QAAAF,OACAL,EAAAxB,KAAA+B,QAAAP,IACA,QACA,YAAAkG,EAAAlG,EAAAJ,YAAA,IACAsG,EAAA7H,EAAAW,OAAA,2BAAAkH,EAAAlG,EAAAf,GAAA,KAAAiH,EAAAlG,EAAAZ,KAAA,SAAA8G,EAAA7H,GAAA,MAGAuC,EAAAoE,UAAAW,kBAAA,SAAAtH,EAAAqH,GACA,GAAAQ,GAAA1H,KAAA+B,QAAAF,MACA7B,MAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAAmI,MAAA,YAAAN,EAAA7H,EAAAW,QAAA0G,EAAA,YAAAQ,EAAA7H,GAAA,IAAA,MAGAuC,EAAAoE,UAAAa,4BAAA,SAAAxH,EAAAqH,GACA,GAAAQ,GAAA1H,KAAA+B,QAAAF,MACA7B,MAAA+B,QAAAP,IACA,QACAkG,EAAA7H,EAAA,UAAA,YAAA6H,EAAA7H,EAAAW,QAAA0G,EAAA,YAAAQ,EAAA7H,GAAA,IAAA,MAGAuC,EAAAoE,UAAAmB,cAAA,WACA,MAAApB,GAAAC,UAAAmB,cAAAE,KAAA7H,MAAA4G,QACA,iBJxSA,IAAA9D,GAAA,CAKA/D,GAAA,qCAAA2J,KAAA,WAcA,QAAAC,KACAC,EAAAC,KAAA,SAAAC,YAAAhH,EAAAC,IACAA,EAAAR,KAAAwH,UACAC,aAAAjH,EAAAR,KAAAwH,SAAAE,KAAAC,UAAAnH,EAAAP,OAGA,QAAA2H,GAAAvG,EAAAwG,GACAR,EAAAC,KAAA,gCAAAjG,EAAA,OAAAyG,OACAC,IAAA,kBAAA1G,EAAA,IAAAwG,EAAA,OAAAG,OAEA,QAAAC,GAAA5G,GACA,QAAA6G,GAAAC,GACA,MAAA3K,GAAA2K,GAAAC,GAAA,QAAA,WACA5H,EAAAP,KAAAoB,GAAA5C,KAAAf,MACA0J,MAGA,QAAAiB,KACA,MAAA7K,GAAA,YAAA8K,OAAA9H,EAAAP,KAAAoB,EAAA,mBAAAN,IAAA,SAAAwH,GACA,MAAA/K,GAAA,YAAAgL,IAAAD,GAAAvI,KAAAQ,EAAAN,KAAA,gBAAAmB,EAAA,IAAAkH,OACAH,GAAA,SAAA,WACA5H,EAAAP,KAAAoB,GAAA5C,KAAAf,MACAkK,EAAAvG,EAAA5C,KAAAf,OACA0J,MAGA,MAAA,eAAA/F,EACA6G,EAAA,iCACA,SAAA7G,GAAA,WAAAA,EACAgH,IAEAH,EADA,qBAAA7G,EACA,wBACA,sBAAAA,GAAA,aAAAA,EACA,mDAEA,uBAhDA,GAAAgG,GAAA7J,EAAAiB,MACAP,GACAC,QAAA,WAAAM,KAAAgK,SACApI,KAAAgH,EAAAqB,QAAA,UAAAC,KAAA,QACAnB,QAAAH,EAAAsB,KAAA,iBAEAvK,IACAF,GAAAsJ,SAAAC,aAAAvJ,EAAAsJ,WACApJ,EAAAsJ,KAAAkB,MAAAnB,aAAAvJ,EAAAsJ,UAEA,IAAAhH,GAAA3C,EAAAK,EAAAE,EACAiJ,GAAArH,KAAAoB,EAAAZ,IAyCA6G,EAAAC,KAAA,+BAAAH,KAAA,WAEA,GAAA0B,GAAArL,EAAAiB,MACAgD,EAAAH,IACAwH,EAAAD,EAAAvB,KAAA,UACAyB,EAAAD,EAAAH,KAAA,SACAK,EAAAxL,EAAA,eAAAiE,EAAA,KAAAqH,EAAA9I,OAAA,WACA+I,IACAC,EAAAL,KAAA,QAAAI,GAEAD,EAAAvB,YAAAyB,EACA,IAAA/I,GAAA4I,EAAAvB,KAAA,OACArH,GAAAsH,YACAU,EAAAY,EAAAF,KAAA,gBAAAA,KAAA,KAAAlH,GAAA+G,IAAAvI,EAAA8B,WAIAsF,EAAAC,KAAA,+BAAAH,KAAA,WACA,GAAA0B,GAAArL,EAAAiB,MACA4J,EAAAQ,EAAAvB,KAAA,SACAe,GAAAY,QACArB,EAAAiB,EAAAF,KAAA,eAAAN,EAAAG,SAGAnB,EAAAC,KAAA,iBAAAgB,OACA9K,EAAA,8BAAA8K,OACA9K,EAAA,yBAAAgD,EAAAN,KAAA,iBAAA,aAAAgJ,MAAA,WACA1I,EAAAP,KAAAR,QACA4H,EAAAC,KAAA,+BAAAH,KAAA,WACA,GAAA0B,GAAArL,EAAAiB,MACA4C,EAAAwH,EAAAF,KAAA,cACAE,GAAAvB,KAAA,SAAAH,KAAA,WACA1I,KAAAf,MAAA8C,EAAAP,KAAAoB,OAGA+F","file":"statistics-classification-binary.js","sourcesContent":["$(function(){\r\n","function htmlEncode(value) {\r\n\t// return $('<div/>').text(value).html(); // http://stackoverflow.com/a/1219983 - can't do it w/o jQuery\r\n\treturn value.toString()\r\n\t\t.replace(/&/g,'&amp;').replace(/\"/g,'&quot;').replace(/'/g,'&#39;')\r\n\t\t.replace(/</g,'&lt;').replace(/>/g,'&gt;')\r\n\t; // https://github.com/emn178/js-htmlencode/blob/master/src/htmlencode.js\r\n}\r\n\r\n// converts simple serializable option objects to one with functions\r\nfunction getOptions(userHtmlOptions,userCodeOptions) {\r\n\tif (userHtmlOptions===undefined) userHtmlOptions={};\r\n\tif (userCodeOptions===undefined) userCodeOptions={};\r\n\tvar k;\r\n\r\n\t// htmlOptions are set by html page authors\r\n\tvar htmlOptions={};\r\n\tfor (k in userHtmlOptions) {\r\n\t\thtmlOptions[k]=userHtmlOptions[k];\r\n\t}\r\n\tif (htmlOptions.heading==true) {\r\n\t\thtmlOptions.heading='h1';\r\n\t}\r\n\r\n\t// codeOptions are set by html page users\r\n\tvar codeOptions={\r\n\t\tget data(){\r\n\t\t\tvar i=this.filename.lastIndexOf('.');\r\n\t\t\tvar dataname;\r\n\t\t\tif (i>0) { // . exists and not 0th character\r\n\t\t\t\tdataname=this.filename.substring(0,i);\r\n\t\t\t} else {\r\n\t\t\t\tdataname=this.filename;\r\n\t\t\t}\r\n\t\t\tvar o={\r\n\t\t\t\ttoString:function(){\r\n\t\t\t\t\treturn dataname;\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\t['model','prob','class','acc','sen','spe','auc'].forEach(function(prop){\r\n\t\t\t\to[prop]=dataname+'.'+prop;\r\n\t\t\t});\r\n\t\t\t['train','test'].forEach(function(set){\r\n\t\t\t\to[set]={\r\n\t\t\t\t\ttoString:function(){\r\n\t\t\t\t\t\treturn dataname+'.'+set;\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t\to[set].model=dataname+'.model'; // one model for both train/test sets\r\n\t\t\t\t['prob','class','acc','sen','spe','auc'].forEach(function(prop){ // different data for train/test sets\r\n\t\t\t\t\to[set][prop]=dataname+'.'+set+'.'+prop;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn o;\r\n\t\t},\r\n\t\tget y(){\r\n\t\t\tvar i=this.formula.indexOf('~');\r\n\t\t\tif (i>=0) {\r\n\t\t\t\treturn this.formula.substring(0,i);\r\n\t\t\t} else {\r\n\t\t\t\t// TODO invalid formula, got to warn\r\n\t\t\t\treturn this.formula;\r\n\t\t\t}\r\n\t\t},\r\n\t\tget rhs(){\r\n\t\t\tvar i=this.formula.indexOf('~');\r\n\t\t\tif (i>=0) {\r\n\t\t\t\treturn this.formula.substring(i+1);\r\n\t\t\t} else {\r\n\t\t\t\t// TODO invalid formula, got to warn\r\n\t\t\t\treturn this.formula;\r\n\t\t\t}\r\n\t\t},\r\n\t\ttoJSON:function(){\r\n\t\t\tvar savedObject={};\r\n\t\t\tthis.userOptionNames.forEach(function(k){\r\n\t\t\t\tsavedObject[k]=this[k];\r\n\t\t\t},this);\r\n\t\t\treturn savedObject;\r\n\t\t},\r\n\t\treset:function(){\r\n\t\t\tthis.filename='data.csv';\r\n\t\t\tthis.postprocess='';\r\n\t\t\tthis.split='random';\r\n\t\t\tthis['split.conditional.condition']='t<0';\r\n\t\t\tthis['split.random.seed']='123';\r\n\t\t\tthis['split.random.ratio']='0.7';\r\n\t\t\tthis.formula='y~.';\r\n\t\t\tthis.predict='probability';\r\n\t\t\tthis['predict.probability.threshold']='0.5';\r\n\t\t\tthis.forestSeed='456';\r\n\t\t},\r\n\t\tuserOptionNames:[\r\n\t\t\t'filename','postprocess',\r\n\t\t\t'split','split.conditional.condition','split.random.seed','split.random.ratio',\r\n\t\t\t'formula',\r\n\t\t\t'predict','predict.probability.threshold',\r\n\t\t\t'forestSeed'\r\n\t\t],\r\n\t\tsplitAvailableValues:['none','conditional','random'],\r\n\t\tpredictAvailableValues:['class','probability'],\r\n\t};\r\n\tcodeOptions.reset();\r\n\tfor (k in userCodeOptions) {\r\n\t\tcodeOptions[k]=userCodeOptions[k];\r\n\t}\r\n\r\n\treturn {\r\n\t\thtml: htmlOptions,\r\n\t\tcode: codeOptions,\r\n\t\ti18n: i18ns.get(htmlOptions.lang),\r\n\t\tencode: htmlEncode,\r\n\t};\r\n}\r\n\r\nfunction generateCodeTable(options) {\r\n\tvar modelClasses=[BaselineModel,LogregModel,CartModel,ForestModel];\r\n\tvar models=modelClasses.map(function(modelClass){\r\n\t\treturn new modelClass(options);\r\n\t});\r\n\treturn \"\"+\r\n\t\t\"<table><tr>\"+\r\n\t\t\tmodels.map(function(model){\r\n\t\t\t\treturn \"<th>\"+options.i18n(model.getNameId())+\"</th>\";\r\n\t\t\t}).join(\"\")+\r\n\t\t\"</tr><tr>\"+\r\n\t\t\tmodels.map(function(model){\r\n\t\t\t\treturn \"<td><code><pre>\"+model.generateCode()+\"</pre></code></td>\";\r\n\t\t\t}).join(\"\")+\r\n\t\t\"</tr></table>\"\r\n\t;\r\n}\r\n\r\nfunction generateHtml(options) {\r\n\treturn \"\"+\r\n\t\t(options.html.heading?\"<\"+options.html.heading+\">\"+options.i18n('Binary classification')+\"</\"+options.html.heading+\">\":\"\")+\r\n\t\t\"<div class='code-options'>\"+\r\n\t\t\toptions.code.userOptionNames.map(function(optionName){\r\n\t\t\t\treturn \"<div class='code-input' data-option='\"+optionName+\"'>\"+\r\n\t\t\t\t\t\"<span class='label'>\"+options.i18n('options.code.'+optionName)+\":</span> \"+\r\n\t\t\t\t\t\"<code>\"+htmlEncode(options.code[optionName])+\"</code>\"+\r\n\t\t\t\t\t\"</div>\";\r\n\t\t\t}).join(\"\")+\r\n\t\t\"</div>\"+\r\n\t\tgenerateCodeTable(options)\r\n\t;\r\n}\r\n\r\nfunction generateStaticHtml(htmlOptions,codeOptions) {\r\n\treturn generateHtml(getOptions(htmlOptions,codeOptions));\r\n}\r\n","var idCounter=0;\r\nfunction generateId() {\r\n\treturn 'statistics-classification-binary-id-'+(idCounter++);\r\n}\r\n\r\n$('.statistics-classification-binary').each(function(){\r\n\tvar containerNode=$(this);\r\n\tvar htmlOptions={\r\n\t\theading: this.nodeName=='SECTION',\r\n\t\tlang: containerNode.closest('[lang]').attr('lang'),\r\n\t\tstorage: containerNode.attr('data-storage'),\r\n\t};\r\n\tvar codeOptions={};\r\n\tif (htmlOptions.storage && localStorage[htmlOptions.storage]) {\r\n\t\tcodeOptions=JSON.parse(localStorage[htmlOptions.storage]);\r\n\t}\r\n\tvar options=getOptions(htmlOptions,codeOptions);\r\n\tcontainerNode.html(generateHtml(options));\r\n\r\n\tfunction applyCodeOptions() {\r\n\t\tcontainerNode.find('table').replaceWith(generateCodeTable(options));\r\n\t\tif (options.html.storage) {\r\n\t\t\tlocalStorage[options.html.storage]=JSON.stringify(options.code);\r\n\t\t}\r\n\t}\r\n\tfunction showHideSuboptionInputs(optionName,optionValue) {\r\n\t\tcontainerNode.find(\".code-options [data-option^='\"+optionName+\".']\").show()\r\n\t\t\t.not(\"[data-option^='\"+optionName+\".\"+optionValue+\".']\").hide();\r\n\t}\r\n\tfunction createOptionInput(optionName) {\r\n\t\tfunction openClose(inputTag) {\r\n\t\t\treturn $(inputTag).on('input',function(){\r\n\t\t\t\toptions.code[optionName]=this.value;\r\n\t\t\t\tapplyCodeOptions();\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction select(){\r\n\t\t\treturn $(\"<select>\").append(options.code[optionName+'AvailableValues'].map(function(optionAvailableValue){\r\n\t\t\t\treturn $(\"<option>\").val(optionAvailableValue).html(options.i18n('options.code.'+optionName+'.'+optionAvailableValue));\r\n\t\t\t})).on('change',function(){\r\n\t\t\t\toptions.code[optionName]=this.value;\r\n\t\t\t\tshowHideSuboptionInputs(optionName,this.value);\r\n\t\t\t\tapplyCodeOptions();\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (optionName=='postprocess') {\r\n\t\t\treturn openClose(\"<textarea spellcheck='false'>\");\r\n\t\t} else if (optionName=='split' || optionName=='predict') {\r\n\t\t\treturn select();\r\n\t\t} else if (optionName=='split.random.seed') {\r\n\t\t\treturn openClose(\"<input type='number'>\");\r\n\t\t} else if (optionName=='split.random.ratio' || optionName=='threshold') {\r\n\t\t\treturn openClose(\"<input type='number' min='0' max='1' step='any'>\");\r\n\t\t} else {\r\n\t\t\treturn openClose(\"<input type='text'>\");\r\n\t\t}\r\n\t}\r\n\t// all inputs with restored/default values\r\n\tcontainerNode.find('.code-options [data-option]').each(function(){\r\n\t\t// TODO why parsing out stuff when can just regenerate with inputs instead of generateHtml() with static html?\r\n\t\tvar div=$(this);\r\n\t\tvar id=generateId();\r\n\t\tvar label=div.find('.label');\r\n\t\tvar labelTitle=label.attr('title');\r\n\t\tvar newLabel=$(\"<label for='\"+id+\"'>\"+label.html()+\"</label>\");\r\n\t\tif (labelTitle) {\r\n\t\t\tnewLabel.attr('title',labelTitle);\r\n\t\t}\r\n\t\tlabel.replaceWith(newLabel);\r\n\t\tvar code=div.find('code');\r\n\t\tcode.replaceWith(\r\n\t\t\tcreateOptionInput(div.attr('data-option')).attr('id',id).val(code.text())\r\n\t\t);\r\n\t});\r\n\t// hide inputs related to options that are not selected\r\n\tcontainerNode.find('.code-options [data-option]').each(function(){\r\n\t\tvar div=$(this);\r\n\t\tvar select=div.find('select');\r\n\t\tif (select.length) {\r\n\t\t\tshowHideSuboptionInputs(div.attr('data-option'),select.val());\r\n\t\t}\r\n\t});\r\n\tcontainerNode.find('.code-options').append(\r\n\t\t$(\"<div class='code-input' />\").append(\r\n\t\t\t$(\"<button type='button'>\"+options.i18n('Reset options')+\"</button>\").click(function(){\r\n\t\t\t\toptions.code.reset();\r\n\t\t\t\tcontainerNode.find('.code-options [data-option]').each(function(){\r\n\t\t\t\t\tvar div=$(this);\r\n\t\t\t\t\tvar optionName=div.attr('data-option');\r\n\t\t\t\t\tdiv.find('input').each(function(){\r\n\t\t\t\t\t\tthis.value=options.code[optionName];\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tapplyCodeOptions();\r\n\t\t\t})\r\n\t\t)\r\n\t);\r\n});\r\n","var i18ns={\r\n\tdata:{},\r\n};\r\ni18ns.get=function(lang) {\r\n\tvar defaultLang='en';\r\n\tlang=lang||defaultLang;\r\n\tlang=lang.split('-')[0]; // get primary language subtag\r\n\treturn function(id){\r\n\t\tvar s=i18ns.data[lang][id];\r\n\t\tvar sLang=lang;\r\n\t\tif (s===undefined) {\r\n\t\t\ts=i18ns.data[defaultLang][id];\r\n\t\t\tsLang=defaultLang;\r\n\t\t}\r\n\t\tif (s===undefined) {\r\n\t\t\ts=id;\r\n\t\t\tsLang=null;\r\n\t\t}\r\n\t\ts=s.replace(/\\[\\[(.*?)\\]\\]/g,function(match,p1){\r\n\t\t\tvar link,text;\r\n\t\t\tvar i=p1.indexOf('|');\r\n\t\t\tif (i<0) {\r\n\t\t\t\tlink=p1;\r\n\t\t\t\ttext=p1;\r\n\t\t\t} else {\r\n\t\t\t\tlink=p1.slice(0,i);\r\n\t\t\t\ttext=p1.slice(i+1);\r\n\t\t\t}\r\n\t\t\tvar hreflang=\"\";\r\n\t\t\tif (sLang && lang!=sLang) {\r\n\t\t\t\threflang=\" hreflang='\"+sLang+\"'\";\r\n\t\t\t}\r\n\t\t\treturn \"<a href='https://\"+sLang+\".wikipedia.org/wiki/\"+link.replace(/ /g,'_')+\"'\"+hreflang+\">\"+text+\"</a>\";\r\n\t\t});\r\n\t\tif (sLang && lang!=sLang) {\r\n\t\t\treturn \"<span lang='\"+sLang+\"'>\"+s+\"</span>\";\r\n\t\t} else {\r\n\t\t\treturn s;\r\n\t\t}\r\n\t};\r\n};\r\n","i18ns.data.en={\r\n\t// header\r\n\t'Binary classification':'[[Binary classification]]',\r\n\t// models\r\n\t'model.baseline':'Baseline method',\r\n\t'model.logreg':'[[Logistic regression]]',\r\n\t'model.cart.prob':'[[Decision tree learning|Regression tree]]',\r\n\t'model.cart.class':'[[Decision tree learning|Classification tree]]',\r\n\t'model.forest':'[[Random forest]]',\r\n\t// input labels\r\n\t'options.code.filename':'Input filename',\r\n\t'options.code.postprocess':'Data postprocessing code',\r\n\t'options.code.split':'[[Test set|Training/test set]] split',\r\n\t'options.code.split.none':'none',\r\n\t'options.code.split.conditional':'conditional',\r\n\t'options.code.split.random':'random',\r\n\t'options.code.split.conditional.condition':'Training set condition',\r\n\t'options.code.split.random.seed':'Split seed',\r\n\t'options.code.split.random.ratio':'Split ratio',\r\n\t'options.code.formula':'Formula',\r\n\t'options.code.predict':'Model predicts',\r\n\t'options.code.predict.class':'classes',\r\n\t'options.code.predict.probability':'probabilities',\r\n\t'options.code.predict.probability.threshold':'Classification probability threshold', // not quite sure\r\n\t'options.code.forestSeed':'Random forest seed',\r\n\t'Reset options':'Reset options',\r\n\t// code comments\r\n\t'comment.data':'load data',\r\n\t'comment.postprocess':'postprocess data',\r\n\t'comment.split':'split data into [[Test set|training/test set]]',\r\n\t'comment.data.model':'build model',\r\n\t'comment.data.prob':'in-sample probability prediction',\r\n\t'comment.data.train.prob':'training set probability prediction',\r\n\t'comment.data.test.prob':'test set probability prediction',\r\n\t'comment.data.class':'in-sample class prediction',\r\n\t'comment.data.train.class':'training set class prediction',\r\n\t'comment.data.test.class':'test set class prediction',\r\n\t'comment.data.acc':'in-sample [[Accuracy_and_precision#In_binary_classification|accuracy]]',\r\n\t'comment.data.train.acc':'training set [[Accuracy_and_precision#In_binary_classification|accuracy]]',\r\n\t'comment.data.test.acc':'test set [[Accuracy_and_precision#In_binary_classification|accuracy]]',\r\n\t'comment.data.sen':'in-sample [[Sensitivity_and_specificity#Sensitivity|sensitivity]]',\r\n\t'comment.data.train.sen':'training set [[Sensitivity_and_specificity#Sensitivity|sensitivity]]',\r\n\t'comment.data.test.sen':'test set [[Sensitivity_and_specificity#Sensitivity|sensitivity]]',\r\n\t'comment.data.spe':'in-sample [[Sensitivity_and_specificity#Specificity|specificity]]',\r\n\t'comment.data.train.spe':'training set [[Sensitivity_and_specificity#Specificity|specificity]]',\r\n\t'comment.data.test.spe':'test set [[Sensitivity_and_specificity#Specificity|specificity]]',\r\n\t'comment.data.auc':'in-sample [[Receiver_operating_characteristic#Area_under_the_curve|AUC]]',\r\n\t'comment.data.train.auc':'training set [[Receiver_operating_characteristic#Area_under_the_curve|AUC]]',\r\n\t'comment.data.test.auc':'test set [[Receiver_operating_characteristic#Area_under_the_curve|AUC]]',\r\n};\r\n","// возможные источники терминологии:\r\n// http://www.machinelearning.ru\r\n// https://yandexdataschool.ru/edu-process/courses/machine-learning\r\n\r\n// точность (accuracy) aka верность, достоверность, правильность; precision тоже называют точностью\r\n// http://www.intuit.ru/studies/courses/6/6/lecture/176?page=5&keyword_content=%D1%82%D0%BE%D1%87%D0%BD%D0%BE%D1%81%D1%82%D1%8C\r\n//\t\"точность (процент корректно классифицированных наблюдений)\"\r\n// http://gis-lab.info/qa/error-matrix.html\r\n//\tтоже за \"точность\"\r\n\r\ni18ns.data.ru={\r\n\t// header\r\n\t'Binary classification':'Бинарная классификация',\r\n\t// models\r\n\t'model.baseline':'Базовый метод', // [?]\r\n\t'model.logreg':'[[Логистическая регрессия]]',\r\n\t'model.cart.prob':'[[Дерево принятия решений|Регрессионное дерево]]',\r\n\t'model.cart.class':'[[Дерево принятия решений|Классификационное дерево]]',\r\n\t'model.forest':'[[Random forest|Случайный лес]]',\r\n\t// input labels\r\n\t'options.code.filename':'Имя входного файла',\r\n\t'options.code.postprocess':'Код для обработки данных',\r\n\t'options.code.split':'Деление на обучающую/тестовую выборку',\r\n\t'options.code.split.none':'нет',\r\n\t'options.code.split.conditional':'по условию',\r\n\t'options.code.split.random':'случайное',\r\n\t'options.code.split.conditional.condition':'Условие попадания в обучающую выборку',\r\n\t'options.code.split.random.seed':'Инициализация (seed) деления на выборки', // http://www.machinelearning.ru/wiki/index.php?title=%D0%92%D1%8B%D0%B1%D0%BE%D1%80%D0%BA%D0%B0\r\n\t'options.code.split.random.ratio':'Доля обучающей выборки при делении',\r\n\t'options.code.formula':'Формула',\r\n\t'options.code.predict':'Модель предсказывает',\r\n\t'options.code.predict.class':'классы',\r\n\t'options.code.predict.probability':'вероятности принадлежности',\r\n\t'options.code.predict.probability.threshold':'Порог на вероятность для классификации',\r\n\t'options.code.forestSeed':'Инициализация (seed) случайного леса',\r\n\t'Reset options':'Сбросить настройки',\r\n\t// code comments\r\n\t'comment.data':'загрузка данных',\r\n\t'comment.postprocess':'обработка данных',\r\n\t'comment.split':'деление данных на обучающую/тестовую выборку',\r\n\t'comment.data.model':'построение модели',\r\n\t'comment.data.prob':'предсказание вероятностей на выборке',\r\n\t'comment.data.train.prob':'предсказание вероятностей на обучающей выборке',\r\n\t'comment.data.test.prob':'предсказание вероятностей на тестовой выборке',\r\n\t'comment.data.class':'предсказание классов на выборке',\r\n\t'comment.data.train.class':'предсказание классов на обучающей выборке',\r\n\t'comment.data.test.class':'предсказание классов на тестовой выборке',\r\n\t'comment.data.acc':'точность (accuracy) на выборке',\r\n\t'comment.data.train.acc':'точность (accuracy) на обучающей выборке',\r\n\t'comment.data.test.acc':'точность (accuracy) на тестовой выборке',\r\n\t'comment.data.sen':'чувствительность на выборке',\r\n\t'comment.data.train.sen':'чувствительность на обучающей выборке',\r\n\t'comment.data.test.sen':'чувствительность на тестовой выборке',\r\n\t'comment.data.spe':'специфичность на выборке',\r\n\t'comment.data.train.spe':'специфичность на обучающей выборке',\r\n\t'comment.data.test.spe':'специфичность на тестовой выборке',\r\n\t'comment.data.auc':'[[ROC-кривая#.D0.9F.D0.BB.D0.BE.D1.89.D0.B0.D0.B4.D1.8C_.D0.BF.D0.BE.D0.B4_.D0.BA.D1.80.D0.B8.D0.B2.D0.BE.D0.B9|AUC]] на выборке',\r\n\t'comment.data.train.auc':'[[ROC-кривая#.D0.9F.D0.BB.D0.BE.D1.89.D0.B0.D0.B4.D1.8C_.D0.BF.D0.BE.D0.B4_.D0.BA.D1.80.D0.B8.D0.B2.D0.BE.D0.B9|AUC]] на обучающей выборке',\r\n\t'comment.data.test.auc':'[[ROC-кривая#.D0.9F.D0.BB.D0.BE.D1.89.D0.B0.D0.B4.D1.8C_.D0.BF.D0.BE.D0.B4_.D0.BA.D1.80.D0.B8.D0.B2.D0.BE.D0.B9|AUC]] на тестовой выборке',\r\n};\r\n","var Model=function(options){\r\n\tthis.options=options;\r\n};\r\nModel.prototype.generateCode=function(){\r\n\treturn this.generateLines().join(\"\\n\");\r\n};\r\nModel.prototype.generateLines=function(){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\tvar data=code.data;\r\n\tvar lines=[];\r\n\r\n\tfunction concatModelLines(data) {\r\n\t\tlines=lines.concat([this.comment('data.model')]);\r\n\t\tif (code.predict=='probability') {\r\n\t\t\tlines=lines.concat(this.generateProbModelLines(data));\r\n\t\t} else {\r\n\t\t\tlines=lines.concat(this.generateClassModelLines(data));\r\n\t\t}\r\n\t}\r\n\tfunction concatPostModelLines(data,dataset) {\r\n\t\tvar isNewdata=dataset=='data.test';\r\n\t\tif (code.predict=='probability') {\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\t[this.comment(dataset+'.prob')],\r\n\t\t\t\tthis.generateProbLines(data,isNewdata),\r\n\t\t\t\t[this.comment(dataset+'.class')],\r\n\t\t\t\tthis.generateClassFromProbLines(data)\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\t[this.comment(dataset+'.class')],\r\n\t\t\t\tthis.generateClassFromModelLines(data,isNewdata)\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines=lines.concat(\r\n\t\t\t[this.comment(dataset+'.acc')],\r\n\t\t\tthis.generateAccLines(data),\r\n\t\t\t[this.comment(dataset+'.sen')],\r\n\t\t\tthis.generateSenLines(data),\r\n\t\t\t[this.comment(dataset+'.spe')],\r\n\t\t\tthis.generateSpeLines(data)\r\n\t\t);\r\n\t\tif (code.predict=='probability') {\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\t[this.comment(dataset+'.auc')],\r\n\t\t\t\tthis.generateAucLines(data)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tlines=lines.concat(this.listLibraries().map(function(lib){\r\n\t\treturn \"library(\"+lib+\")\";\r\n\t}),[\r\n\t\t\"\",\r\n\t\tthis.comment('data'),\r\n\t\te(data)+\"=read.csv('\"+e(code.filename)+\"')\",\r\n\t]);\r\n\tif (code.postprocess) {\r\n\t\tlines=lines.concat([\r\n\t\t\tthis.comment('postprocess'),\r\n\t\t\te(code.postprocess),\r\n\t\t]);\r\n\t}\r\n\tif (code.split=='none') {\r\n\t\tconcatModelLines.call(this,data);\r\n\t\tconcatPostModelLines.call(this,data,'data');\r\n\t} else if (code.split=='conditional') {\r\n\t\tlines=lines.concat([\r\n\t\t\tthis.comment('split'),\r\n\t\t\te(data.train)+\"=subset(\"+e(data)+\",\"+e(code['split.conditional.condition'])+\")\",\r\n\t\t\te(data.test)+\"=subset(\"+e(data)+\",!(\"+e(code['split.conditional.condition'])+\"))\",\r\n\t\t]);\r\n\t\tconcatModelLines.call(this,data.train);\r\n\t\tconcatPostModelLines.call(this,data.train,'data.train');\r\n\t\tconcatPostModelLines.call(this,data.test,'data.test');\r\n\t} else if (code.split=='random') {\r\n\t\tlines=lines.concat([\r\n\t\t\tthis.comment('split'),\r\n\t\t\t\"set.seed(\"+e(code['split.random.seed'])+\")\",\r\n\t\t\t\"split=sample.split(\"+e(data)+\"$\"+e(code.y)+\",SplitRatio=\"+e(code['split.random.ratio'])+\")\",\r\n\t\t\te(data.train)+\"=\"+e(data)+\"[split,]\",\r\n\t\t\te(data.test)+\"=\"+e(data)+\"[!split,]\",\r\n\t\t]);\r\n\t\tconcatModelLines.call(this,data.train);\r\n\t\tconcatPostModelLines.call(this,data.train,'data.train');\r\n\t\tconcatPostModelLines.call(this,data.test,'data.test');\r\n\t}\r\n\treturn lines;\r\n};\r\nModel.prototype.generateClassFromProbLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data['class'])+\"=+(\"+e(data.prob)+\">=\"+e(code['predict.probability.threshold'])+\")\",\r\n\t];\r\n};\r\nModel.prototype.generateAccLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.acc)+\"=mean(\"+e(data)+\"$\"+e(code.y)+\"==\"+e(data['class'])+\")\",\r\n\t];\r\n};\r\nModel.prototype.generateSenLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.sen)+\"=mean(\"+e(data['class'])+\"[\"+e(data)+\"$\"+e(code.y)+\"==1]==1)\",\r\n\t];\r\n};\r\nModel.prototype.generateSpeLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.spe)+\"=mean(\"+e(data['class'])+\"[\"+e(data)+\"$\"+e(code.y)+\"==0]==0)\",\r\n\t];\r\n};\r\nModel.prototype.generateAucLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.auc)+\"=performance(\",\r\n\t\t\"\\t\"+\"prediction(\"+e(data.prob)+\",\"+e(data)+\"$\"+e(code.y)+\"),'auc'\",\r\n\t\t\")@y.values[[1]]\",\r\n\t];\r\n};\r\nModel.prototype.listLibraries=function(){\r\n\tlibs=[];\r\n\tif (this.options.code.predict=='probability') {\r\n\t\tlibs.push('ROCR'); // for AUC computation\r\n\t}\r\n\tif (this.options.code.split=='random') {\r\n\t\tlibs.push('caTools');\r\n\t}\r\n\treturn libs;\r\n\t// TODO require libs from code\r\n};\r\nModel.prototype.comment=function(id){\r\n\treturn \"# \"+this.options.i18n('comment.'+id);\r\n};\r\n\r\nvar BaselineModel=function(options){\r\n\tModel.call(this,options);\r\n};\r\nBaselineModel.prototype=Object.create(Model.prototype);\r\nBaselineModel.prototype.constructor=BaselineModel;\r\nBaselineModel.prototype.getNameId=function(){\r\n\treturn 'model.baseline';\r\n};\r\nBaselineModel.prototype.generateProbModelLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.model)+\"=mean(\"+e(data)+\"$\"+e(code.y)+\")\",\r\n\t];\r\n};\r\nBaselineModel.prototype.generateClassModelLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.model)+\"=names(sort(-table(\"+e(data)+\"$\"+e(code.y)+\")))[1]\", // http://stackoverflow.com/a/2547551\r\n\t];\r\n};\r\nBaselineModel.prototype.generateProbLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.prob)+\"=rep_len(\"+e(data.model)+\",nrow(\"+e(data)+\"))\",\r\n\t];\r\n};\r\nBaselineModel.prototype.generateClassFromModelLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data['class'])+\"=rep_len(\"+e(data.model)+\",nrow(\"+e(data)+\"))\",\r\n\t];\r\n};\r\n\r\nvar LogregModel=function(options){\r\n\tModel.call(this,options);\r\n};\r\nLogregModel.prototype=Object.create(Model.prototype);\r\nLogregModel.prototype.constructor=LogregModel;\r\nLogregModel.prototype.getNameId=function(){\r\n\treturn 'model.logreg';\r\n};\r\nLogregModel.prototype.generateProbModelLines=\r\nLogregModel.prototype.generateClassModelLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.model)+\"=glm(\"+e(code.formula)+\",data=\"+e(data)+\",family=binomial)\",\r\n\t];\r\n};\r\nLogregModel.prototype.generateProbLines=function(data,isNewdata){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.prob)+\"=predict(\"+e(data.model)+(isNewdata?\",newdata=\"+e(data):\"\")+\",type='response')\",\r\n\t];\r\n};\r\nLogregModel.prototype.generateClassFromModelLines=function(data,isNewdata){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data['class'])+\"=+(predict(\"+e(data.model)+(isNewdata?\",newdata=\"+e(data):\"\")+\",type='response')>0.5)\",\r\n\t];\r\n};\r\n\r\nvar CartModel=function(options){\r\n\tModel.call(this,options);\r\n};\r\nCartModel.prototype=Object.create(Model.prototype);\r\nCartModel.prototype.constructor=CartModel;\r\nCartModel.prototype.getNameId=function(){\r\n\tif (this.options.code.predict=='class') {\r\n\t\treturn 'model.cart.class';\r\n\t} else if (this.options.code.predict=='probability') {\r\n\t\treturn 'model.cart.prob';\r\n\t}\r\n};\r\nCartModel.prototype.generateProbModelLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.model)+\"=rpart(\"+e(code.formula)+\",data=\"+e(data)+\")\",\r\n\t];\r\n};\r\nCartModel.prototype.generateClassModelLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.model)+\"=rpart(\"+e(code.formula)+\",data=\"+e(data)+\",method='class')\",\r\n\t];\r\n};\r\nCartModel.prototype.generateProbLines=function(data,isNewdata){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.prob)+\"=predict(\"+e(data.model)+(isNewdata?\",newdata=\"+e(data):\"\")+\")\",\r\n\t];\r\n};\r\nCartModel.prototype.generateClassFromModelLines=function(data,isNewdata){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data['class'])+\"=predict(\"+e(data.model)+(isNewdata?\",newdata=\"+e(data):\"\")+\",type='class')\",\r\n\t];\r\n};\r\nCartModel.prototype.listLibraries=function(){\r\n\treturn Model.prototype.listLibraries.call(this).concat([\r\n\t\t'rpart',\r\n\t]);\r\n};\r\n\r\nvar ForestModel=function(options){\r\n\tModel.call(this,options);\r\n};\r\nForestModel.prototype=Object.create(Model.prototype);\r\nForestModel.prototype.constructor=ForestModel;\r\nForestModel.prototype.getNameId=function(){\r\n\treturn 'model.forest';\r\n};\r\nForestModel.prototype.generateProbModelLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\t\"set.seed(\"+e(code.forestSeed)+\")\",\r\n\t\te(data.model)+\"=randomForest(\"+e(code.formula)+\",data=\"+e(data)+\")\",\r\n\t];\r\n};\r\nForestModel.prototype.generateClassModelLines=function(data){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\t\"set.seed(\"+e(code.forestSeed)+\")\",\r\n\t\te(data.model)+\"=randomForest(as.factor(\"+e(code.y)+\")~\"+e(code.rhs)+\",data=\"+e(data)+\")\",\r\n\t];\r\n};\r\nForestModel.prototype.generateProbLines=function(data,isNewdata){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data.prob)+\"=predict(\"+e(data.model)+(isNewdata?\",newdata=\"+e(data):\"\")+\")\",\r\n\t];\r\n};\r\nForestModel.prototype.generateClassFromModelLines=function(data,isNewdata){\r\n\tvar e=this.options.encode;\r\n\tvar code=this.options.code;\r\n\treturn [\r\n\t\te(data['class'])+\"=predict(\"+e(data.model)+(isNewdata?\",newdata=\"+e(data):\"\")+\")\",\r\n\t];\r\n};\r\nForestModel.prototype.listLibraries=function(){\r\n\treturn Model.prototype.listLibraries.call(this).concat([\r\n\t\t'randomForest',\r\n\t]);\r\n};\r\n"],"sourceRoot":"../src"}